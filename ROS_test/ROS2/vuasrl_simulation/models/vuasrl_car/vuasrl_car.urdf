<?xml version="1.0" ?>
<robot name="vuasrl_car" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <link name="base_link"/>
  <!-- because origin is in the center, we want the IMU to stand on the baseplate -->
  <link name="baseplate">
    <visual>
      <material name="acrylic"/>
      <origin rpy="0 0 0" xyz="0 0 0.03375"/>
      <!-- origin (0,0,0) is in the center of the box, so place the origin of this in the bottom of baseplate -->
      <geometry>
        <box size="0.5 0.2 0.0675"/>
        <!-- 50x20x6.75 cm, X-axis is front of vehicle -->
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.03375"/>
      <!-- origin (0,0,0) is in the center of the box, so place the origin of this in the bottom of baseplate -->
      <geometry>
        <box size="0.5 0.2 0.0675"/>
        <!-- 50x20x6.75 cm, X-axis is front of vehicle -->
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.03375"/>
      <mass value="2.0"/>
      <inertia ixx="0.00371302083333" ixy="0" ixz="0" iyy="0.0212130208333" iyz="0" izz="0.0241666666667"/>
    </inertial>
  </link>
  <joint name="base_link_to_baseplate" type="fixed">
    <parent link="base_link"/>
    <child link="baseplate"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
  </joint>
  <link name="front_mount">
    <visual>
      <material name="grey"/>
      <origin rpy="0 0.0 0" xyz="-0.105 0 0"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <geometry>
        <box size="0.50 0.12 0.01"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0.0 0" xyz="-0.105 0 0"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <geometry>
        <box size="0.50 0.12 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0.0 0" xyz="-0.105 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.000604166666667" ixy="0" ixz="0" iyy="0.00240416666667" iyz="0" izz="0.003"/>
    </inertial>
  </link>
  <joint name="baseplate_to_front_mount" type="fixed">
    <parent link="baseplate"/>
    <child link="front_mount"/>
    <origin rpy="0 0 0" xyz="0.105 0 -0.059"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
  </joint>

  <link name="front_shaft">
    <visual>
      <material name="black"/>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.285" radius="0.018"/>
        <!-- confirm length between wheels -->
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.285" radius="0.018"/>
        <!-- confirm length between wheels -->
      </geometry>
    </collision>
    <inertial>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.000684975" ixy="0" ixz="0" iyy="0.000684975" iyz="0" izz="1.62e-05"/>
    </inertial>
  </link>
  <joint name="front_mount_to_front_shaft" type="fixed">
    <parent link="front_mount"/>
    <child link="front_shaft"/>
    <origin rpy="0 0 0" xyz="0.105 0 -0.059"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
  </joint>
  <link name="rear_shaft">
    <visual>
      <material name="black"/>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.285" radius="0.018"/>
        <!-- confirm length between wheels -->
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.285" radius="0.018"/>
        <!-- confirm length between wheels -->
      </geometry>
    </collision>
    <inertial>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.000684975" ixy="0" ixz="0" iyy="0.000684975" iyz="0" izz="1.62e-05"/>
    </inertial>
  </link>
  <joint name="rear_mount_to_rear_shaft" type="fixed">
    <parent link="front_mount"/>
    <child link="rear_shaft"/>
    <origin rpy="0 0 0" xyz="-0.305 0 -0.059"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
  </joint>
  <link name="steering_wheel">
    <visual>
      <material name="white"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.015"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.015"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.05"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="steering_joint" type="revolute">
    <parent link="front_shaft"/>
    <child link="steering_wheel"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="10" lower="-0.349065850399" upper="0.349065850399" velocity="100"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
  </joint>
      
  <link name="front_right_hinge">
    <visual>
      <material name="white"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.015"/>
      </geometry>
    </visual>
    <!--<collision>
			<xacro:hinge_geometry/>
		</collision>-->
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.05"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
      <!-- small inertia -->
    </inertial>
  </link>
  <joint name="front_right_hinge_joint" type="revolute">
    <!-- revolute is a joint with a range limited motion around its' axis -->
    <parent link="front_shaft"/>
    <child link="front_right_hinge"/>
    <origin rpy="0 0 0" xyz="0 -0.1425 0"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
    <axis xyz="0 0 1"/>
    <limit effort="10" lower="-0.349065850399" upper="0.349065850399" velocity="100"/>
    <dynamics friction="5.0" damping="0.1"/>
    <!-- effeort is similar to torque/acceleration -->
    <!-- friction - The physical static friction. For prismatic joints, the units are Newtons. For revolving joints, the units are Newton meters. -->
    <!-- damping - The physical damping value. For prismatic joints, the units are Newton seconds per meter. For revolving joints, Newton meter secons per radian. -->
  </joint>
  <transmission name="front_right_hinge_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_right_hinge_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_right_hinge_motor">
      <!-- The motor is torque controlled -->
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="front_left_hinge">
    <visual>
      <material name="white"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.015"/>
      </geometry>
    </visual>
    <!--<collision>
			<xacro:hinge_geometry/>
		</collision>-->
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.05"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
      <!-- small inertia -->
    </inertial>
  </link>
  <joint name="front_left_hinge_joint" type="revolute">
    <!-- revolute is a joint with a range limited motion around its' axis -->
    <parent link="front_shaft"/>
    <child link="front_left_hinge"/>
    <origin rpy="0 0 0" xyz="0 0.1425 0"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
    <axis xyz="0 0 1"/>
    <limit effort="10" lower="-0.349065850399" upper="0.349065850399" velocity="100"/>
    <dynamics friction="5.0" damping="0.1"/>
    <!-- effeort is similar to torque/acceleration -->
    <!-- friction - The physical static friction. For prismatic joints, the units are Newtons. For revolving joints, the units are Newton meters. -->
    <!-- damping - The physical damping value. For prismatic joints, the units are Newton seconds per meter. For revolving joints, Newton meter secons per radian. -->
  </joint>
  <transmission name="front_left_hinge_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_left_hinge_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_left_hinge_motor">
      <!-- The motor is torque controlled -->
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="front_right_wheel">
    <visual>
      <material name="black"/>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.064" radius="0.0775"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.064" radius="0.0775"/>
      </geometry>
      <!--<contact_coefficients mu="0" kp="1000.0" kd="1.0"/>-->
      <!-- mu=The friction coefficient, kp=Stiffness coefficient, kd=Dampening coefficient -->
    </collision>
    <inertial>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <mass value="0.15"/>
      <inertia ixx="0.000276434375" ixy="0" ixz="0" iyy="0.000276434375" iyz="0" izz="0.00045046875"/>
    </inertial>
  </link>
  <joint name="front_right_wheel_joint" type="continuous">
    <!-- continuous is a joint of continous motion around its' axis -->
    <parent link="front_right_hinge"/>
    <child link="front_right_wheel"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
    <axis xyz="0 1 0"/>
    <!-- friction - The physical static friction. For prismatic joints, the units are Newtons. For revolving joints, the units are Newton meters. -->
    <!-- damping - The physical damping value. For prismatic joints, the units are Newton seconds per meter. For revolving joints, Newton meter secons per radian. -->
    <limit effort="10" velocity="100"/>
  </joint>
  <transmission name="front_right_wheel_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_right_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_right_wheel_motor">
      <!-- The motor is torque controlled -->
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="front_left_wheel">
    <visual>
      <material name="black"/>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.064" radius="0.0775"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.064" radius="0.0775"/>
      </geometry>
      <!--<contact_coefficients mu="0" kp="1000.0" kd="1.0"/>-->
      <!-- mu=The friction coefficient, kp=Stiffness coefficient, kd=Dampening coefficient -->
    </collision>
    <inertial>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <mass value="0.15"/>
      <inertia ixx="0.000276434375" ixy="0" ixz="0" iyy="0.000276434375" iyz="0" izz="0.00045046875"/>
    </inertial>
  </link>
  <joint name="front_left_wheel_joint" type="continuous">
    <!-- continuous is a joint of continous motion around its' axis -->
    <parent link="front_left_hinge"/>
    <child link="front_left_wheel"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
    <axis xyz="0 1 0"/>
    <!-- friction - The physical static friction. For prismatic joints, the units are Newtons. For revolving joints, the units are Newton meters. -->
    <!-- damping - The physical damping value. For prismatic joints, the units are Newton seconds per meter. For revolving joints, Newton meter secons per radian. -->
    <limit effort="10" velocity="100"/>
  </joint>
  <transmission name="front_left_wheel_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_left_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_left_wheel_motor">
      <!-- The motor is torque controlled -->
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_right_wheel">
    <visual>
      <material name="black"/>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.064" radius="0.0775"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.064" radius="0.0775"/>
      </geometry>
      <!--<contact_coefficients mu="0" kp="1000.0" kd="1.0"/>-->
      <!-- mu=The friction coefficient, kp=Stiffness coefficient, kd=Dampening coefficient -->
    </collision>
    <inertial>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <mass value="0.15"/>
      <inertia ixx="0.000276434375" ixy="0" ixz="0" iyy="0.000276434375" iyz="0" izz="0.00045046875"/>
    </inertial>
  </link>
  <joint name="rear_right_wheel_joint" type="continuous">
    <!-- continuous is a joint of continous motion around its' axis -->
    <parent link="rear_shaft"/>
    <child link="rear_right_wheel"/>
    <origin rpy="0 0 0" xyz="0 -0.1425 0"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
    <axis xyz="0 1 0"/>
    <dynamics friction="0.0" damping="0.2"/>
    <!-- friction - The physical static friction. For prismatic joints, the units are Newtons. For revolving joints, the units are Newton meters. -->
    <!-- damping - The physical damping value. For prismatic joints, the units are Newton seconds per meter. For revolving joints, Newton meter secons per radian. -->
    <limit effort="10" velocity="100"/>
  </joint>
  <transmission name="rear_right_wheel_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_right_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_right_wheel_motor">
      <!-- The motor is torque controlled -->
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_left_wheel">
    <visual>
      <material name="black"/>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.064" radius="0.0775"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the cylinder -->
      <geometry>
        <cylinder length="0.064" radius="0.0775"/>
      </geometry>
      <!--<contact_coefficients mu="0" kp="1000.0" kd="1.0"/>-->
      <!-- mu=The friction coefficient, kp=Stiffness coefficient, kd=Dampening coefficient -->
    </collision>
    <inertial>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <mass value="0.15"/>
      <inertia ixx="0.000276434375" ixy="0" ixz="0" iyy="0.000276434375" iyz="0" izz="0.00045046875"/>
    </inertial>
  </link>
  <joint name="rear_left_wheel_joint" type="continuous">
    <!-- continuous is a joint of continous motion around its' axis -->
    <parent link="rear_shaft"/>
    <child link="rear_left_wheel"/>
    <origin rpy="0 0 0" xyz="0 0.1425 0"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
    <axis xyz="0 1 0"/>
    <dynamics friction="0.0" damping="0.2"/>
    <!-- friction - The physical static friction. For prismatic joints, the units are Newtons. For revolving joints, the units are Newton meters. -->
    <!-- damping - The physical damping value. For prismatic joints, the units are Newton seconds per meter. For revolving joints, Newton meter secons per radian. -->
    <limit effort="10" velocity="100"/>
  </joint>
  <transmission name="rear_left_wheel_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_left_wheel_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_left_wheel_motor">
      <!-- The motor is torque controlled -->
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Sensors -->
  <link name="laser_sensor_mount">
    <visual>
      <material name="blue"/>
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <geometry>
        <cylinder length="0.05" radius="0.005"/>
        <!-- confirm length between wheels -->
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <geometry>
        <cylinder length="0.05" radius="0.005"/>
        <!-- confirm length between wheels -->
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <mass value="0.005"/>
      <!-- 5 grams -->
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
      <!-- small inertia -->
    </inertial>
  </link>
  <joint name="baseplate_to_laser_sensor_mount" type="fixed">
    <parent link="baseplate"/>
    <child link="laser_sensor_mount"/>
    <origin rpy="0 0 0" xyz="0.18 0.00 0.0675"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
  </joint>
  <link name="laser_sensor">
    <visual>
      <material name="black"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <geometry>
        <cylinder length="0.029" radius="0.05"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <geometry>
        <cylinder length="0.029" radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.162"/>
      <inertia ixx="0.0001306395" ixy="0" ixz="0" iyy="1.91295e-05" iyz="0" izz="0.000127062"/>
    </inertial>
  </link>
  <joint name="laser_sensor_mount_to_laser_sensor" type="fixed">
    <parent link="laser_sensor_mount"/>
    <child link="laser_sensor"/>
    <origin rpy="0 0 0" xyz="0 0 0.0645"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
  </joint>
  <link name="camera_mount">
    <visual>
      <material name="blue"/>
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <geometry>
        <cylinder length="0.05" radius="0.005"/>
        <!-- confirm length between wheels -->
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <geometry>
        <cylinder length="0.05" radius="0.005"/>
        <!-- confirm length between wheels -->
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <mass value="0.005"/>
      <!-- 5 grams -->
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
      <!-- small inertia -->
    </inertial>
  </link>
  <joint name="baseplate_to_camera_mount" type="fixed">
    <parent link="baseplate"/>
    <child link="camera_mount"/>
    <origin rpy="0 0 0" xyz="0.24 0.00 0.0355"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
  </joint>
  <link name="camera">
    <visual>
      <material name="blue"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <geometry>
        <box size="0.024 0.094 0.029"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- origin (0,0,0) is in the center of the box -->
      <geometry>
        <box size="0.024 0.094 0.029"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.162"/>
      <inertia ixx="0.0001306395" ixy="0" ixz="0" iyy="1.91295e-05" iyz="0" izz="0.000127062"/>
    </inertial>
  </link>
  <joint name="camera_mount_to_camera" type="fixed">
    <parent link="camera_mount"/>
    <child link="camera"/>
    <origin rpy="0 0.5 0" xyz="0 0 0.0645"/>
    <!-- offset from parent to child, so with direction based in parent frame -->
  </joint>

<!-- hokuyo -->
  <gazebo reference="laser_sensor">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>4.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <namespace>/vuasrl_car</namespace>
          <remapping>~/out:=/scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
      </plugin>
    </sensor>
  </gazebo>
  
  <!-- camera -->
  <gazebo reference="camera">
    <sensor type="camera" name="camera_sensor">
    <!-- Set always_on only sensor, not on plugin -->
    <always_on>true</always_on>
    <!-- Set update_rate only sensor, not on plugin -->
    <update_rate>15</update_rate>
     <camera name="camera">
      <horizontal_fov>1.2</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>300</far>
      </clip>
      <distortion>
        <k1>0.0</k1>
        <k2>0.0</k2>
        <k3>0.0</k3>
        <p1>0.0</p1>
        <p2>0.0</p2>
        <center>0.5 0.5</center>
       </distortion>
      </camera>
    <plugin name="camera_sensor" filename="libgazebo_ros_camera.so">
      <ros>
        <namespace>/vuasrl_car</namespace>
        <remapping>camera/image_raw:=/vuasrl_car/camera/rgb/image_raw</remapping>
        <remapping>camera/camera_info:=/vuasrl_car/camera/rgb/camera_info</remapping>
      </ros>    
      <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
      <camera_name></camera_name>
      <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
      <frame_name>camera</frame_name>
      <hack_baseline>0.07</hack_baseline>
      <!-- No need to repeat distortion parameters or to set autoDistortion -->
    </plugin>   
    </sensor>
  </gazebo>
  
  <gazebo>   
  <plugin name="joint_states" filename="libgazebo_ros_joint_state_publisher.so">  
    <joint_name>front_left_hinge_joint</joint_name>
    <joint_name>front_right_hinge_joint</joint_name> 
    <joint_name>front_left_wheel_joint</joint_name>
    <joint_name>front_right_wheel_joint</joint_name> 
    <joint_name>rear_right_wheel_joint</joint_name>
    <joint_name>rear_left_wheel_joint</joint_name>  
  </plugin>
  
  <plugin name="ackermann_drive" filename="libgazebo_ros_ackermann_drive.so">
     <ros>
       <namespace>/vuasrl_car</namespace>
       <remapping>cmd_vel:=cmd_vel</remapping>
       <remapping>odom:=odom</remapping>
       <remapping>distance:=distance</remapping>
     </ros>
    <update_rate>100</update_rate>
    
    <!-- Name of left, right joint, defaults to `left_joint` --> 
    <front_left_joint>front_left_wheel_joint</front_left_joint>
    <front_right_joint>front_right_wheel_joint</front_right_joint>
    <rear_left_joint>rear_left_wheel_joint</rear_left_joint>
    <rear_right_joint>rear_right_wheel_joint</rear_right_joint>
    
    <left_steering_joint>front_left_hinge_joint</left_steering_joint>
    <right_steering_joint>front_right_hinge_joint</right_steering_joint>
    <steering_wheel_joint>steering_joint</steering_wheel_joint>

    <!-- Max absolute steer angle for tyre in radians-->
    <!-- Any cmd_vel angular z greater than this would be capped -->
    <max_steer>0.6458</max_steer>
    <!-- Max absolute steering angle of steering wheel -->
    <max_steering_angle>7.85</max_steering_angle>
    <!-- Max absolute linear speed in m/s -->
    <max_speed>10</max_speed>

    <!-- PID tuning -->
    <left_steering_pid_gain>1500 0 1</left_steering_pid_gain>
    <left_steering_i_range>0 0</left_steering_i_range>
    <right_steering_pid_gain>1500 0 1</right_steering_pid_gain>
    <right_steering_i_range>0 0</right_steering_i_range>
    <linear_velocity_pid_gain>1000 0 1</linear_velocity_pid_gain>
    <linear_velocity_i_range>0 0</linear_velocity_i_range>
    
    <!-- output -->
    <publish_distance>true</publish_distance>
    <publish_wheel_tF>true</publish_wheel_tF>
    <publish_odom>true</publish_odom>
    <publish_odom_tf>true</publish_odom_tf>
    
    <!-- Odometry frame, defaults to `odom` -->
    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_link</robot_base_frame>
    
  </plugin>    
  </gazebo> 
  <!-- Plugins, eg. sensors -->
  <!-- hokuyo LiDAR can be found here: https://github.com/mit-racecar/racecar-simulator/blob/master/racecar_description/urdf/racecar.gazebo#L59 -->
  <!-- camera sensor might be found here: https://github.com/JoshMarino/gazebo_and_ros_control or here: http://gazebosim.org/tutorials?tut=ros_gzplugins -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="acrylic">
    <color rgba="1.0 1.0 1.0 0.4"/>
  </material>
</robot>

